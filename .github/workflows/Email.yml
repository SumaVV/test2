name: Send Email

on:
  workflow_dispatch: # Allows manual triggering of the workflow
  push:
    inputs:
      to:
        description: 'Recipient email address'
        required: true
      subject:
        description: 'Email subject'
        required: true
      body:
        description: 'Email body'
        required: true

jobs:
  send_email:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install secure-smtplib

      - name: Send Email
        env:
          SMTP_SERVER: smtp.gmail.com
          SMTP_PORT: 465
          SMTP_USERNAME: ${{secrets.EMAIL_ID}}
          SMTP_PASSWORD: ${{secrets.EMAIL_PASSKEY}}
          TO_EMAIL: sumamegur@gmail.com, sumabhat993@gmail.com
          EMAIL_SUBJECT: "GitHub action test build status"
          EMAIL_BODY: "This is the test email of gitHub. Please check log for more info"
          FROM_EMAIL: "GitHub Actions sumamegur@gmail.com" # Optional: If you want a specific sender
        run: |
          import smtplib
          from email.mime.text import MIMEText

          smtp_server = smtp.gmail.com
          port = 465
          username = ${{secrets.EMAIL_ID}}
          password = ${{secrets.EMAIL_PASSKEY}}
          to_email = sumamegur@gmail.com, sumabhat993@gmail.com
          subject = "GitHub action test build status"
          body =  "This is the test email of gitHub. Please check log for more info"
          from_email = "GitHub Actions sumamegur@gmail.com"# Use username as sender if FROM_EMAIL is not set

          msg = MIMEText(body)
          msg['Subject'] = subject
          msg['From'] = from_email
          msg['To'] = to_email

          try:
              server = smtplib.SMTP_SSL(smtp_server, port)
              server.login(username, password)
              server.sendmail(from_email, to_email, msg.as_string())
              print(f"Email sent successfully to {to_email}")
          except Exception as e:
              print(f"Error sending email: {e}")
          finally:
              if 'server' in locals() and server.is_connected():
                  server.quit()